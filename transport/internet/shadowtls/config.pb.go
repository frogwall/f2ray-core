// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.21.12
// source: transport/internet/shadowtls/config.proto

package shadowtls

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Config is the settings for ShadowTLS transport layer.
type Config struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ShadowTLS protocol version (1, 2, or 3)
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Password for authentication (required for v2/v3)
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	// Handshake server address for TLS handshake mimicry (e.g., "google.com")
	// This is the real server to perform TLS handshake with for traffic obfuscation
	HandshakeServer string `protobuf:"bytes,3,opt,name=handshakeServer,proto3" json:"handshakeServer,omitempty"`
	// Handshake server port (defaults to 443 if not specified)
	HandshakePort uint32 `protobuf:"varint,4,opt,name=handshakePort,proto3" json:"handshakePort,omitempty"`
	// Strict mode (v3 only)
	StrictMode bool `protobuf:"varint,5,opt,name=strict_mode,json=strictMode,proto3" json:"strict_mode,omitempty"`
	// Users for multi-user support (v3 only, server side)
	Users         []*User `protobuf:"bytes,6,rep,name=users,proto3" json:"users,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Config) Reset() {
	*x = Config{}
	mi := &file_transport_internet_shadowtls_config_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Config) ProtoMessage() {}

func (x *Config) ProtoReflect() protoreflect.Message {
	mi := &file_transport_internet_shadowtls_config_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Config.ProtoReflect.Descriptor instead.
func (*Config) Descriptor() ([]byte, []int) {
	return file_transport_internet_shadowtls_config_proto_rawDescGZIP(), []int{0}
}

func (x *Config) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Config) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Config) GetHandshakeServer() string {
	if x != nil {
		return x.HandshakeServer
	}
	return ""
}

func (x *Config) GetHandshakePort() uint32 {
	if x != nil {
		return x.HandshakePort
	}
	return 0
}

func (x *Config) GetStrictMode() bool {
	if x != nil {
		return x.StrictMode
	}
	return false
}

func (x *Config) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

// User represents a ShadowTLS user (v3 only)
type User struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_transport_internet_shadowtls_config_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_transport_internet_shadowtls_config_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_transport_internet_shadowtls_config_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_transport_internet_shadowtls_config_proto protoreflect.FileDescriptor

const file_transport_internet_shadowtls_config_proto_rawDesc = "" +
	"\n" +
	")transport/internet/shadowtls/config.proto\x12'v2ray.core.transport.internet.shadowtls\"\xf4\x01\n" +
	"\x06Config\x12\x18\n" +
	"\aversion\x18\x01 \x01(\rR\aversion\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\x12(\n" +
	"\x0fhandshakeServer\x18\x03 \x01(\tR\x0fhandshakeServer\x12$\n" +
	"\rhandshakePort\x18\x04 \x01(\rR\rhandshakePort\x12\x1f\n" +
	"\vstrict_mode\x18\x05 \x01(\bR\n" +
	"strictMode\x12C\n" +
	"\x05users\x18\x06 \x03(\v2-.v2ray.core.transport.internet.shadowtls.UserR\x05users\"6\n" +
	"\x04User\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpasswordB\x96\x01\n" +
	"+com.v2ray.core.transport.internet.shadowtlsP\x01Z;github.com/v2fly/v2ray-core/v5/transport/internet/shadowtls\xaa\x02'V2Ray.Core.Transport.Internet.ShadowTLSb\x06proto3"

var (
	file_transport_internet_shadowtls_config_proto_rawDescOnce sync.Once
	file_transport_internet_shadowtls_config_proto_rawDescData []byte
)

func file_transport_internet_shadowtls_config_proto_rawDescGZIP() []byte {
	file_transport_internet_shadowtls_config_proto_rawDescOnce.Do(func() {
		file_transport_internet_shadowtls_config_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_transport_internet_shadowtls_config_proto_rawDesc), len(file_transport_internet_shadowtls_config_proto_rawDesc)))
	})
	return file_transport_internet_shadowtls_config_proto_rawDescData
}

var file_transport_internet_shadowtls_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_transport_internet_shadowtls_config_proto_goTypes = []any{
	(*Config)(nil), // 0: v2ray.core.transport.internet.shadowtls.Config
	(*User)(nil),   // 1: v2ray.core.transport.internet.shadowtls.User
}
var file_transport_internet_shadowtls_config_proto_depIdxs = []int32{
	1, // 0: v2ray.core.transport.internet.shadowtls.Config.users:type_name -> v2ray.core.transport.internet.shadowtls.User
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_transport_internet_shadowtls_config_proto_init() }
func file_transport_internet_shadowtls_config_proto_init() {
	if File_transport_internet_shadowtls_config_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_transport_internet_shadowtls_config_proto_rawDesc), len(file_transport_internet_shadowtls_config_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_transport_internet_shadowtls_config_proto_goTypes,
		DependencyIndexes: file_transport_internet_shadowtls_config_proto_depIdxs,
		MessageInfos:      file_transport_internet_shadowtls_config_proto_msgTypes,
	}.Build()
	File_transport_internet_shadowtls_config_proto = out.File
	file_transport_internet_shadowtls_config_proto_goTypes = nil
	file_transport_internet_shadowtls_config_proto_depIdxs = nil
}
